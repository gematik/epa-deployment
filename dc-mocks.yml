version: "3.8"

# Common Health Check Properties
x-healthcheck-config: &healthcheck-ref
  interval: 15s
  timeout: 10s
  retries: 100
  start_period: 30s

name: dc-mocks
services:
  tiger-proxy:
    image: gematik1/tiger-proxy-image:3.6.1
    container_name: tiger-proxy
    restart: 'always'
    healthcheck:
      <<: *healthcheck-ref
      test: "wget -T5 -qO- http://localhost:8080/actuator/health | grep UP || exit 1"
    environment:
      - SPRING_CONFIG_LOCATION=/app/config/application.yaml
      - MANAGEMENT_SERVER_PORT=
      - TIGERPROXY_ADMINPORT=8080
      - TIGERPROXY_PROXYPORT=443
    networks:
      - mock-network
    volumes:
      - ./tiger-proxy:/app/config
    ports:
      - "${EPA_PORT}:443"
      - "${TIGER_PROXY_ADMIN_PORT}:8080"

  vau-proxy-server:
    image: gematik1/epa-vau-proxy-server:1.0.16
    container_name: vau-proxy-server
    restart: 'always'
    healthcheck:
      <<: *healthcheck-ref
      test: "wget -T5 -qO- http://localhost:8080/actuator/health | grep UP || exit 1"
    environment:
      - SPRING_PROFILES_ACTIVE=server-prod
      - SERVICES_INFORMATION_SERVICE_URL=http://information-service:8080
      - SERVICES_AUTHORIZATION_SERVICE_URL=http://authorization-service:8086
      - SERVICES_MEDICATION_SERVICE_URL=http://medication-service:8080
      - SERVICES_MEDICATION_RENDER_SERVICE_URL=http://medication-render-service:8080
      - SERVICES_ENTITLEMENT_SERVICE_URL=http://entitlement-service:8080
      - LIB_VAU_LOGGING_LEVEL=${LIB_VAU_LOGGING_LEVEL}
    networks:
      - mock-network
    volumes:
      - ./vau-proxy/application-server-prod.yaml:/app/config/application-server-prod.yaml
    ports:
      - "${VAU_PROXY_SERVER_PORT}:8080"

  information-service:
    image: gematik1/tiger-zion-image:3.6.1
    container_name: information-service
    restart: 'always'
    environment:
      - SPRING_CONFIG_LOCATION=/app/config/application.yaml
    networks:
      - mock-network
    volumes:
      - ./information:/app/config
    ports:
      - "${INFORMATION_SERVICE_PORT}:8080"

  authorization-service:
    image: gematik1/asforepa:3.0.1
    container_name: authorization-service
    restart: 'always'
    healthcheck:
      <<: *healthcheck-ref
      test: "curl --fail --silent http://localhost:8186/actuator/health | grep UP || exit 1"
    environment:
      - SERVER_PORT=8086
      # RU
      - ASFOREPA_IDP_DIENST_URL=https://idp-ref.app.ti-dienste.de/auth
      - ASFOREPA_CLIENT_ID=GEMgemaePAAHdL9ZU23R
      - ASFOREPA_REDIRECT_URI=https://test-ps.gematik.de/ePA
      - ASFOREPA_SCOPES=ePA-PS-gemtk,openid
      - ASFOREPA_LOGLEVEL=debug
      - MANAGEMENT_PORT=8186
    networks:
      - mock-network
    ports:
      - "${AUTHORIZATION_SERVICE_PORT}:8086"

  medication-service:
    image: hapiproject/hapi:v7.6.0
    container_name: medication-service
    restart: 'always'
    networks:
      - mock-network
    ports:
      - "${MEDICATION_SERVICE_PORT}:8080"

  medication-render-service:
    image: gematik1/epa-medication-render:1.0.6
    container_name: medication-render-service
    restart: 'always'
    healthcheck:
      <<: *healthcheck-ref
      test: "curl --fail --silent http://localhost:8080/actuator/health | grep UP || exit 1"
    environment:
      - SERVER_PORT=8080
      - FHIR_SERVER_HOST=medication-service
      - FHIR_SERVER_PORT=8080
      - MANAGEMENT_PORT=8080
    networks:
      - mock-network
    ports:
      - "${MEDICATION_RENDER_SERVICE_PORT}:8080"

  entitlement-service:
    image: gematik1/epa-entitlement:1.0.9
    container_name: entitlement-service
    restart: 'always'
    healthcheck:
      <<: *healthcheck-ref
      test: "curl --fail --silent http://localhost:8080/health | grep UP || exit 1"
    environment:
      - SERVER_PORT=8080
      - ENFORCE_HCV_CHECK=true
    networks:
      - mock-network
    ports:
      - "${ENTITLEMENT_SERVICE_PORT}:8080"
networks:
  mock-network:
    name: mock-network
